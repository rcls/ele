
0: 3a
4: 3a

# Now pulse clock, (pta 3)
0:32  0:3a  0:32  0:3a  0:32  0:3a  0:32  0:3a
0:32  0:3a  0:32  0:3a  0:32  0:3a  0:32  0:3a
0:32  0:3a  0:32  0:3a  0:32  0:3a  0:32  0:3a
0:32  0:3a  0:32  0:3a  0:32  0:3a  0:32  0:3a
0:32  0:3a  0:32  0:3a  0:32  0:3a  0:32  0:3a
0:32  0:3a  0:32  0:3a  0:32  0:3a  0:32  0:3a
0:32  0:3a  0:32  0:3a  0:32  0:3a  0:32  0:3a
0:32  0:3a  0:32  0:3a  0:32  0:3a  0:32  0:3a

# Take data (pta 5) low.

0: 1a

# Pulse clock again.

0:12  0:1a  0:12  0:1a  0:12  0:1a  0:12  0:1a
0:12  0:1a  0:12  0:1a  0:12  0:1a  0:12  0:1a
0:12  0:1a  0:12  0:1a  0:12  0:1a  0:12  0:1a
0:12  0:1a  0:12  0:1a  0:12  0:1a  0:12  0:1a
0:12  0:1a  0:12  0:1a  0:12  0:1a  0:12  0:1a
0:12  0:1a  0:12  0:1a  0:12  0:1a  0:12  0:1a
0:12  0:1a  0:12  0:1a  0:12  0:1a  0:12  0:1a
0:12  0:1a  0:12  0:1a  0:12  0:1a  0:12  0:1a


80:

# increment.
ae 05    # ldx #$05

#inc_loop
e6 ea    # lda x,$ea
a1 09    # cmp #9
26 06    # bne .+6
6f ea    # clr x,$ea
5b f6    # dbnz inc_loop
20 02    # bra .+2
6c ea    # inc x,$ea

# display.
ae 04    # ldx #4
#display_loop
89       # pshx
ee ea    # ldx x,$ea
d6 ee e0 # lda x,$eee0
cd ef 00 # jsr display_byte
88       # pulx
5b f4    # dbnzx display_loop

# pulse strobe & update parity.
6e 12 00 # mov #$12,0
33 ea    # com ea
6e 02 00 # mov #$02,0

4f       # clra
5f       # clrx
5b fe    # dbnzx .-2
4b fc    # dbnzx .-4

20 d2    # bra $80

b0:

# read_byte:
a6 fe    # lda #%11111110
# read_data:
6e 18 00 # mov #%00011000,0

48       # lsla
0b 00 01 # brclr5 0,.+1
4c       # inca
6e 10 00 # mov #%00010000,0
25 f3    # bcs .-13
81       # rts


ea: 0
eb= 0 0 0 0 0

# ea - parity (00 or ff).
# eb,ec,ed,ee,ef - counter bytes.

fa: 0 0 0 0 0 80
100=
